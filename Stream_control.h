/*  Copyright 2020 Neurostim Technologies LLC

Stream control constants
*/

#define BIT0  0x00000001
#define BIT1  0x00000002
#define BIT2  0x00000004
#define BIT3  0x00000008
#define BIT4  0x00000010
#define BIT5  0x00000020
#define BIT6  0x00000040
#define BIT7  0x00000080
#define BIT8  0x00000100
#define BIT9  0x00000200
#define BIT10 0x00000400
#define BIT11 0x00000800
#define BIT12 0x00001000
#define BIT13 0x00002000
#define BIT14 0x00004000
#define BIT15 0x00008000
#define BIT16 0x00010000
#define BIT17 0x00020000
#define BIT18 0x00040000
#define BIT19 0x00080000
#define BIT20 0x00100000
#define BIT21 0x00200000
#define BIT22 0x00400000
#define BIT23 0x00800000
#define BIT24 0x01000000
#define BIT25 0x02000000
#define BIT26 0x04000000
#define BIT27 0x08000000
#define BIT28 0x10000000
#define BIT29 0x20000000
#define BIT30 0x40000000
#define BIT31 0x80000000

//
// BIT DEFINITIONS FOR SCR[channel][0]
//
#define STREAM_ACTIVE_BIT     BIT15
#define STREAM_ACTIVE_SHIFT   15
#define STREAM_SYNC_BIT       BIT14
#define STREAM_SYNC_SHIFT     14
#define STREAM_HOG_BIT        BIT13
#define STREAM_HOG_SHIFT      13
#define STREAM_PRIOR_BITS     (BIT11|BIT10|BIT9|BIT8)
#define STREAM_PRIOR_SHIFT    8
#define STREAM_LENGTH_BITS    0xFF
#define STREAM_LENGTH_SHIFT   0

//
// BIT DEFINITIONS FOR SCR[channel][1]
//
#define STREAM_SAMPLE_BITS    (BIT15|BIT14)
#define STREAM_SAMPLE_SHIFT   14
#define STREAM_DTYPE_BITS     BIT13
#define STREAM_DTYPE_SHIFT    13
#define STREAM_DECIM_BITS     (BIT12|BIT11|BIT10)
#define STREAM_DECIM_SHIFT    10
#define STREAM_BANDW_BITS     0x03FF
#define STREAM_BANDW_SHIFT    0

//
// BIT DEFINITIONS FOR SCR[LEFT/RIGHT_AUDIO][2]
//
#define AUDIO_ADPCM_BIT       BIT15
#define AUDIO_ADPCM_SHIFT     15
#define AUDIO_PCM_BITS        (BIT14|BIT13|BIT12)
#define AUDIO_PCM_SHIFT       12
#define AUDIO_PDM_BIT         BIT11
#define AUDIO_PDM_SHIFT       11
#define AUDIO_MIC_BITS        (BIT9|BIT8)
#define AUDIO_MIC_SHIFT       8
#define AUDIO_GAIN_BITS       0x007F
#define AUDIO_GAIN_SHIFT      0

//
// BIT DEFINITIONS FOR SCR[STREAM_STATUS][2]
//
#define ARBITER_TIME_BITS     0xFF00
#define ARBITER_TIME_SHIFT    8
#define ARBITER_NUM_PKT_BITS  0x00FF
#define ARBITER_NUM_PKT_SHIFT 0

//
// BIT DEFINITIONS FOR SCR[channel][15]
//
#define SCR_PACKET_HEADER     15

//
// Macros for getting various options
//
#define GET_CHANNEL_ACTIVE(channel)        ((SCR[channel][0] & STREAM_ACTIVE_BIT)  >> STREAM_ACTIVE_SHIFT ) 
#define GET_CHANNEL_SYNCHRONOUS(channel)   ((SCR[channel][0] & STREAM_SYNC_BIT)    >> STREAM_SYNC_SHIFT   )
#define GET_CHANNEL_HOG(channel)           ((SCR[channel][0] & STREAM_HOG_BIT)     >> STREAM_HOG_SHIFT    )
#define GET_CHANNEL_PRIORITY(channel)      ((SCR[channel][0] & STREAM_PRIOR_BITS)  >> STREAM_PRIOR_SHIFT  )
#define GET_CHANNEL_LENGTH(channel)        ((SCR[channel][0] & STREAM_LENGTH_BITS) >> STREAM_LENGTH_SHIFT )

#define GET_CHANNEL_SAMPLE_WIDTH(channel)  ((SCR[channel][1] & STREAM_SAMPLE_BITS) >> STREAM_SAMPLE_SHIFT )
#define GET_CHANNEL_DEC_TYPE(channel)      ((SCR[channel][1] & STREAM_DTYPE_BITS)  >> STREAM_DTYPE_SHIFT  )
#define GET_CHANNEL_DECIMATION(channel)    ((SCR[channel][1] & STREAM_DECIM_BITS)  >> STREAM_DECIM_SHIFT  )
#define GET_CHANNEL_BANDWIDCH(channel)     ((SCR[channel][1] & STREAM_BANDW_BITS)  >> STREAM_BANDW_SHIFT  )
#define GET_PACKET_HEADER(channel)         ((channel << 4) | (SCR[channel][SCR_PACKET_HEADER] & 0x0F))
#define GET_AUDIO_ADPCM(channel)           ((SCR[channel][2] & AUDIO_ADPCM_BIT)  >> AUDIO_ADPCM_SHIFT )
#define GET_AUDIO_PCM_SOURCE(channel)      ((SCR[channel][2] & AUDIO_PCM_BITS)   >> AUDIO_PCM_SHIFT   )
#define GET_AUDIO_PDM_PHASE(channel)       ((SCR[channel][2] & AUDIO_PDM_BIT)    >> AUDIO_PDM_SHIFT   )
#define GET_AUDIO_MIC_FREQ(channel)        ((SCR[channel][2] & AUDIO_MIC_BITS)   >> AUDIO_MIC_SHIFT   )
#define GET_AUDIO_GAIN(channel)            ((SCR[channel][2] & AUDIO_GAIN_BITS)  >> AUDIO_GAIN_SHIFT  )

#define GET_RESULT_VECTOR_POINTER          (SCR[RESULTS_VECTOR][2])

#define GET_ARBITER_TIMER                  ((SCR[STREAM_STATUS][2] & ARBITER_TIME_BITS) >> ARBITER_TIME_SHIFT )
#define GET_ARBITER_NUM_PACKET             ((SCR[STREAM_STATUS][2] & ARBITER_NUM_PKT_BITS) >> ARBITER_NUM_PKT_SHIFT )

//
// Macros for setting various options
//
#define SET_CHANNEL_ACTIVE(channel)         (SCR[channel][0] |=  ACTIVE_ON)
#define SET_CHANNEL_INACTIVE(channel)       (SCR[channel][0] &= ~ACTIVE_ON)

//
// Definitions used to set options for the SCR initialization
//
#define ACTIVE_ON             STREAM_ACTIVE_BIT
#define ACTIVE_OFF            0
#define SYNC_ON               STREAM_SYNC_BIT
#define SYNC_OFF              0
#define HOG_ON                STREAM_HOG_BIT
#define HOG_OFF               0
#define DEFAULT_PRIORITY(value)       (value>>STREAM_PRIOR_SHIFT)
#define DEFAULT_LENGTH(value)         (value<<STREAM_LENGTH_SHIFT)
#define DEFAULT_SAMPLE_WIDTH(value)   (value<<STREAM_SAMPLE_SHIFT)
#define DEFAULT_DEC_TYPE(value)       (value<<STREAM_DTYPE_SHIFT)
#define DEFAULT_DEC_VALUE(value)      (value<<STREAM_DECIM_SHIFT)
#define DEFAULT_BANDWIDTH(value)      (value<<STREAM_BANDW_SHIFT)

#define ADPCM_ON              (AUDIO_ADPCM_BIT<<AUDIO_ADPCM_SHIFT)
#define ADPCM_OFF             0
#define PCM_SOURCE(value)     (value<<AUDIO_PCM_SHIFT)
#define PDM_PHASE(value)      (value<<AUDIO_PDM_SHIFT)
#define MIC_FREQ(value)       (value<<AUDIO_MIC_SHIFT)
#define GAIN(value)           (value<<AUDIO_GAIN_SHIFT)

#define PCM_SOURCE_DEFAULT    0   // Data
#define PDM_PHASE_DEFAULT     0   // 
#define MIC_FREQ_DEFAULT      0   // 1Mhz
#define GAIN_DEFAULT          0

#define ARBITER_TIME_DEFAULT     8
#define ARBITER_NUM_PKT_DEFAULT  1

//
// definitions used to initialize SCR in global.h
//
#define       RFU_0_0 ( ACTIVE_OFF | SYNC_OFF | HOG_OFF | DEFAULT_PRIORITY ( 0) | DEFAULT_LENGTH(  0) )
#define  LEFT_AUDIO_0 ( ACTIVE_OFF | SYNC_ON  | HOG_ON  | DEFAULT_PRIORITY (14) | DEFAULT_LENGTH(131) )
#define RIGHT_AUDIO_0 ( ACTIVE_OFF | SYNC_ON  | HOG_ON  | DEFAULT_PRIORITY (13) | DEFAULT_LENGTH(131) )
#define  THREE_AXIS_0 ( ACTIVE_OFF | SYNC_ON  | HOG_OFF | DEFAULT_PRIORITY (12) | DEFAULT_LENGTH( 48) )
#define  EMG_SENSOR_0 ( ACTIVE_OFF | SYNC_ON  | HOG_OFF | DEFAULT_PRIORITY ( 9) | DEFAULT_LENGTH( 24) )
#define  EKG_SENSOR_0 ( ACTIVE_OFF | SYNC_ON  | HOG_OFF | DEFAULT_PRIORITY (10) | DEFAULT_LENGTH( 48) )
#define  EEG_SENSOR_0 ( ACTIVE_OFF | SYNC_ON  | HOG_OFF | DEFAULT_PRIORITY (10) | DEFAULT_LENGTH( 48) )
#define RESULT_VECT_0 ( ACTIVE_OFF | SYNC_OFF | HOG_OFF | DEFAULT_PRIORITY ( 1) | DEFAULT_LENGTH(131) )
#define SPO2_SENSOR_0 ( ACTIVE_OFF | SYNC_ON  | HOG_OFF | DEFAULT_PRIORITY (10) | DEFAULT_LENGTH( 48) )
#define   NINE_AXIS_0 ( ACTIVE_OFF | SYNC_ON  | HOG_OFF | DEFAULT_PRIORITY (11) | DEFAULT_LENGTH( 48) )
#define       RFU_A_0 ( ACTIVE_OFF | SYNC_OFF | HOG_OFF | DEFAULT_PRIORITY ( 0) | DEFAULT_LENGTH(  0) )
#define       RFU_B_0 ( ACTIVE_OFF | SYNC_OFF | HOG_OFF | DEFAULT_PRIORITY ( 0) | DEFAULT_LENGTH(  0) )
#define       RFU_C_0 ( ACTIVE_OFF | SYNC_OFF | HOG_OFF | DEFAULT_PRIORITY ( 0) | DEFAULT_LENGTH(  0) )
#define       RFU_D_0 ( ACTIVE_OFF | SYNC_OFF | HOG_OFF | DEFAULT_PRIORITY ( 0) | DEFAULT_LENGTH(  0) )
#define      STATUS_0 ( ACTIVE_OFF | SYNC_ON  | HOG_ON  | DEFAULT_PRIORITY ( 2) | DEFAULT_LENGTH( 64) )
#define      FILLER_0 ( ACTIVE_OFF | SYNC_OFF | HOG_OFF | DEFAULT_PRIORITY ( 0) | DEFAULT_LENGTH(  0) )

#define       RFU_0_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(0) | DEFAULT_BANDWIDTH(  0) )
#define  LEFT_AUDIO_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(1) | DEFAULT_BANDWIDTH(256) )
#define RIGHT_AUDIO_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(1) | DEFAULT_BANDWIDTH(256) )
#define  THREE_AXIS_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(1) | DEFAULT_BANDWIDTH( 32) )
#define  EMG_SENSOR_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(2) | DEFAULT_BANDWIDTH( 12) )
#define  EKG_SENSOR_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(2) | DEFAULT_BANDWIDTH( 32) )
#define  EEG_SENSOR_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(2) | DEFAULT_BANDWIDTH( 32) )
#define RESULT_VECT_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(0) | DEFAULT_BANDWIDTH(256) )
#define SPO2_SENSOR_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(2) | DEFAULT_BANDWIDTH( 32) )
#define   NINE_AXIS_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(1) | DEFAULT_BANDWIDTH( 32) )
#define       RFU_A_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(0) | DEFAULT_BANDWIDTH(  0) )
#define       RFU_B_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(0) | DEFAULT_BANDWIDTH(  0) )
#define       RFU_C_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(0) | DEFAULT_BANDWIDTH(  0) )
#define       RFU_D_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(0) | DEFAULT_BANDWIDTH(  0) )
#define      STATUS_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(0) | DEFAULT_BANDWIDTH(  1) )
#define      FILLER_1 ( DEFAULT_SAMPLE_WIDTH(0) | DEFAULT_DEC_TYPE(0) | DEFAULT_DEC_VALUE(0) | DEFAULT_BANDWIDTH(  0) )

#define  LEFT_AUDIO_2 ( ADPCM_OFF | PCM_SOURCE(PCM_SOURCE_DEFAULT) | PDM_PHASE(PDM_PHASE_DEFAULT) | MIC_FREQ(MIC_FREQ_DEFAULT) | GAIN_DEFAULT)
#define RIGHT_AUDIO_2 ( ADPCM_OFF | PCM_SOURCE(PCM_SOURCE_DEFAULT) | PDM_PHASE(PDM_PHASE_DEFAULT) | MIC_FREQ(MIC_FREQ_DEFAULT) | GAIN_DEFAULT)

#define      STATUS_2 ( (ARBITER_TIME_DEFAULT << ARBITER_TIME_SHIFT) | (ARBITER_NUM_PKT_DEFAULT << ARBITER_NUM_PKT_SHIFT))
